@model BuilderingApp.Models.Comment

@{
    ViewBag.Title = "EditComment";
}

@if (Model != null)
{
    <h2>Edit Comment</h2>


    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Comment</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CommentId)
    @ViewData["RouteId"]
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RouteId)

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>
    <input class="form-control text-box single-line valid" id="User" name="User" type="hidden" value="@System.Web.HttpContext.Current.User.Identity.Name" aria-invalid="false">


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }
}

@if (Model == null)
{
    <div>
        <br />
        <br />
        <br />
        @ViewBag.errorMsg
        @Html.ActionLink("Return to route", "GetRoute", "Route", new { id = ViewBag.ID }, null)
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
